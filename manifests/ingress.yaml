---
# Non-embedded cluster
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: cd4pe
  namespace: '{{repl or (ConfigOption "namespace") Namespace}}'
  annotations:
    kots.io/exclude: '{{repl or (ConfigOptionEquals "enable_ingress" "1" | not) IsKurl }}'
    kubernetes.io/ingress.allow-http: '{{repl ConfigOptionEquals "allow_http" "1" }}'
    nginx.ingress.kubernetes.io/force-ssl-redirect: '{{repl ConfigOptionEquals "allow_http" "1" | not }}'
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "annotations" | nindent 4 }}
spec:
  rules:
    - host: repl{{ or (ConfigOption "hostname") "~" }}
      http:
        paths:
          - path: /
            backend:
              serviceName: cd4pe
              servicePort: 8080
    - host: cd4pe.repl{{ or (ConfigOption "hostname") "~" }}
      http:
        paths:
          - path: /
            backend:
              serviceName: cd4pe
              servicePort: 8000
---
# Embedded cluster. With kURL, the ingress uses a secret from the admin console namespace for TLS.
# If the application is in a different namespace, follow
# https://blog.donbowman.ca/2018/09/06/accessing-a-service-in-a-different-namespace-from-a-single-ingress-in-kubernetes
# to setup a service in the ingress's namespace to reroute to the application namespace.
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: cd4pe-repl{{ConfigOption "namespace"}}
  namespace: '{{repl Namespace}}'
  annotations:
    kots.io/exclude: '{{repl or (ConfigOptionEquals "enable_ingress" "1" | not) (not IsKurl) }}'
    kubernetes.io/ingress.allow-http: '{{repl ConfigOptionEquals "allow_http" "1" }}'
    nginx.ingress.kubernetes.io/force-ssl-redirect: '{{repl ConfigOptionEquals "allow_http" "1" | not }}'
    kots.io/placeholder: repl{{ printf "'true'" }}repl{{ ConfigOption "annotations" | nindent 4 }}
spec:
  tls:
  - hosts:
      - repl{{ ConfigOption "hostname" }}
    secretName: kotsadm-tls
  rules:
  - host: repl{{ ConfigOption "hostname" }}
    http:
      paths:
      - path: /
        backend:
          serviceName: repl{{(eq Namespace (or (ConfigOption "namespace") Namespace)) | ternary "cd4pe" (print "cd4pe-" (ConfigOption "namespace"))}}
          servicePort: 8080
  - host: cd4pe.repl{{ or (ConfigOption "hostname") "~" }}
    http:
      paths:
        - path: /
          backend:
            serviceName: repl{{(eq Namespace (or (ConfigOption "namespace") Namespace)) | ternary "cd4pe" (print "cd4pe-" (ConfigOption "namespace"))}}
            servicePort: 8000
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kots.io/exclude: '{{repl or (ConfigOptionEquals "enable_ingress" "1" | not) (not IsKurl) (eq Namespace (or (ConfigOption "namespace") Namespace)) }}'
  name: cd4pe-repl{{ConfigOption "namespace"}}
  namespace: '{{repl Namespace}}'
spec:
  type: ExternalName
  externalName: cd4pe.repl{{or (ConfigOption "namespace") Namespace}}.svc.cluster.local
  ports:
  - name: webui
    port: 8080
  - name: backend
    port: 8000
